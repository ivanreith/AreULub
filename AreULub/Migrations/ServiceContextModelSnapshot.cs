// <auto-generated />
using System;
using AreULub.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AreULub.Migrations
{
    [DbContext(typeof(ServiceContext))]
    partial class ServiceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AreULub.Models.CommentsModel", b =>
                {
                    b.Property<int>("CommentsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("CommentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("CommentsUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("CommentsID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("AreULub.Models.ServiceModel", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceEstimated")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("ServicePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ServiceID");

                    b.HasIndex("UserID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceID = 1,
                            ServiceDescription = "Fast and using the best oil",
                            ServiceEstimated = "Around 30 minutes",
                            ServiceName = "Oil Change",
                            ServicePrice = 80m,
                            UserID = "1"
                        },
                        new
                        {
                            ServiceID = 2,
                            ServiceDescription = "Reliable to get your car ready",
                            ServiceEstimated = "Around 1 hour",
                            ServiceName = "General checkout",
                            ServicePrice = 140m,
                            UserID = "5"
                        },
                        new
                        {
                            ServiceID = 3,
                            ServiceDescription = "Quick and using Duracell",
                            ServiceEstimated = "Around 15 minutes",
                            ServiceName = "Battery change",
                            ServicePrice = 120m,
                            UserID = "7"
                        });
                });

            modelBuilder.Entity("AreULub.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "1",
                            UserLast = "FakeLast1",
                            UserName = "Johnny"
                        },
                        new
                        {
                            UserId = "2",
                            UserLast = "FakeLast2",
                            UserName = "Tommy"
                        },
                        new
                        {
                            UserId = "3",
                            UserLast = "FakeLast3",
                            UserName = "Danny"
                        },
                        new
                        {
                            UserId = "4",
                            UserLast = "FakeLast4",
                            UserName = "Mannly"
                        },
                        new
                        {
                            UserId = "5",
                            UserLast = "FakeLast5",
                            UserName = "Conny"
                        },
                        new
                        {
                            UserId = "6",
                            UserLast = "FakeLast6",
                            UserName = "Sunny"
                        },
                        new
                        {
                            UserId = "7",
                            UserLast = "FakeLast7",
                            UserName = "Diandra"
                        });
                });

            modelBuilder.Entity("AreULub.Models.ServiceModel", b =>
                {
                    b.HasOne("AreULub.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
